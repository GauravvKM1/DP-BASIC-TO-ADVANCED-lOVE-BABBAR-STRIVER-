class Solution {
public:
    int solveMemo(vector<int>& nums,int index,int end,vector<int>&dp){
        // base case
        if(index<end){
         return 0;
        }
        if(index==end)return nums[index];

        if(dp[index]!=-1)return dp[index];
        int include=nums[index]+solveMemo(nums,index-2,end,dp);
        int exclude=0+solveMemo(nums,index-1,end,dp);
        return dp[index]=max(include,exclude);
    }
    int rob(vector<int>& nums) {
         
        int n=nums.size();
        if(n==1)return nums[0];
        if(n==2)return max(nums[0],nums[1]);
        vector<int>dp(n,-1);
        
        int option1=solveMemo(nums,n-2,0,dp);
        fill(dp.begin(),dp.end(),-1);
        int option2=solveMemo(nums,n-1,1,dp);
        return max(option1,option2);
    }
};
